<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:UCs="clr-namespace:TimePlayer.UserControls"
	xmlns:Converters="clr-namespace:TimePlayer.Converters">

	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="FlatButton" TargetType="{x:Type Button}">
		<!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="2" />
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="OpacityMask" Value="#AA888888"/>
				<Setter Property="Margin" Value="2 1" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="False">
				<Setter Property="BorderBrush" Value="Transparent" />
			</Trigger>
			<!--<Trigger Property="IsEnabled" Value="False">
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Background" Value="Transparent"/>
			</Trigger>-->
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type UCs:VolumeControl}">
		<Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type UCs:VolumeControl}">
					<Border Background="{TemplateBinding Background}"
						   BorderBrush="{TemplateBinding BorderBrush}"
						   BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Image Grid.Column="0" Source="/Resources/Volume.png" SnapsToDevicePixels="True" Stretch="Uniform" Width="48" VerticalAlignment="Center" />
							<Slider Grid.Column="1" Minimum="0" Maximum="1" SmallChange="0.05" LargeChange="0.2" VerticalAlignment="Center" Focusable="{TemplateBinding Focusable}"
								   Value="{Binding Volume, Mode=TwoWay}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type UCs:VideoControlButton}">
		<Style.Resources>
			<Image x:Key="Image_Play" Source="/Resources/Play.png" Stretch="Uniform" />
			<Image x:Key="Image_Pause" Source="/Resources/Pause.png" Stretch="Uniform" />
			<Image x:Key="Image_PlayGrey" Source="/Resources/PlayGrey.png" Stretch="Uniform" />
		</Style.Resources>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Content" Value="{StaticResource Image_Play}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type UCs:VideoControlButton}">
					<Border Background="{TemplateBinding Background}"
						   BorderBrush="{TemplateBinding BorderBrush}"
						   BorderThickness="{TemplateBinding BorderThickness}">
						<Button Style="{StaticResource FlatButton}" Focusable="{TemplateBinding Focusable}" >
							<ContentPresenter />
						</Button>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Trigger.Setters>
					<Setter Property="Content" Value="{StaticResource Image_PlayGrey}" />
				</Trigger.Setters>
			</Trigger>
			<Trigger Property="IsPlaying" Value="True">
				<Trigger.Setters>
					<Setter Property="Content" Value="{StaticResource Image_Pause}" />
				</Trigger.Setters>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="OpacityMask" Value="#AA888888"/>
				<Setter Property="Margin" Value="2 1" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="False">
				<Setter Property="BorderBrush" Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>


	<LinearGradientBrush x:Key="NormalThumbFillBackground" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="White" Offset="0" />
		<GradientStop Color="#FFEBEBEB" Offset="0.5" />
		<GradientStop Color="#FFD6D6D6" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="MouseOverThumbFillBackground" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="White" Offset="0" />
		<GradientStop Color="#FFBBE3F9" Offset="0.5" />
		<GradientStop Color="#FFB1E0F8" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedThumbFillBackground" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="White" Offset="0" />
		<GradientStop Color="#FF5DB2E0" Offset="0.5" />
		<GradientStop Color="#FF4F93BD" Offset="1" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="SliderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="#FFB2B5B3" Offset="0" />
		<GradientStop Color="#FFFAFAFA" Offset="1" />
	</LinearGradientBrush>

	<!-- //#TODODOC
         Repeat Button - This is used by RangeSlider for the LowerRange, Range, and HigherRange buttons -->
	<Style x:Key="DefaultRangeStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Rectangle x:Name="MainBorder" Fill="{TemplateBinding Background}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--//##TODODOC-->
	<!--Since a thumb is pretty small, we put a bigger visual clue
   outside the thumb bounds to give the user a hint where the focus is-->
	<Style x:Key="ThumbFocusVisualStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="-2" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid>
			<Border x:Name="BackgroundFadingBorder" Background="Black" />
			<Border x:Name="BackgroundBorder" BorderBrush="#FF929292" BorderThickness="1" CornerRadius="1">
				<Rectangle x:Name="MainBorder" Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={StaticResource NormalThumbFillBackground}}"
						 StrokeThickness="1" Stroke="White"
						 Width="9" Height="20" Opacity="1"
						 ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type Slider}}, Path=Value, StringFormat=\{0:00.00\}}"
						 SnapsToDevicePixels="True" />
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" TargetName="MainBorder" Value="0.9" />
			</Trigger>
			<Trigger Property="IsMouseCaptureWithin" Value="True">
				<Setter Property="Opacity" TargetName="MainBorder" Value="0.8" />
			</Trigger>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Slider}}, Path=Orientation}" Value="Vertical">
				<Setter TargetName="MainBorder" Property="Width" Value="20" />
				<Setter TargetName="MainBorder" Property="Height" Value="9" />
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" Value="{x:Null}" />
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Opacity" TargetName="MainBorder" Value="1" />
				<Setter Property="BorderBrush" TargetName="BackgroundBorder" Value="#FF3C7FB1" />
				<Setter Property="Fill" TargetName="MainBorder" Value="{StaticResource MouseOverThumbFillBackground}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" Value="{x:Null}" />
					<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptureWithin}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="BorderBrush" TargetName="BackgroundBorder" Value="#FF2C628B" />
				<Setter Property="Fill" TargetName="MainBorder" Value="{StaticResource PressedThumbFillBackground}" />
			</MultiDataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="BorderBrush" TargetName="BackgroundBorder" Value="#FFD7D7D7" />
				<Setter Property="Fill" TargetName="MainBorder" Value="#FFF4F4F4" />
				<Setter Property="Stroke" TargetName="MainBorder" Value="#FFD7D7D7" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="LeftThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid>
			<Polygon x:Name="ThumbPolygon" VerticalAlignment="Top" Fill="{StaticResource NormalThumbFillBackground}" SnapsToDevicePixels="True"
				    StrokeThickness=".5" Stroke="Black" StrokeLineJoin="Round"
				    Points="0,0 10,0 5,8" Width="12" Height="10" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="ThumbPolygon" Property="Fill" Value="{StaticResource MouseOverThumbFillBackground}" />
			</Trigger>
			<Trigger Property="IsMouseCaptureWithin" Value="True">
				<Setter TargetName="ThumbPolygon" Property="Fill" Value="{StaticResource PressedThumbFillBackground}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="LeftSliderTemplate" TargetType="{x:Type Slider}">
		<Track x:Name="PART_Track" Orientation="Horizontal">
			<Track.Thumb>
				<Thumb x:Name="thumb" Focusable="True"
					  Background="{TemplateBinding Background}" Template="{StaticResource LeftThumbTemplate}">
				</Thumb>
			</Track.Thumb>
		</Track>
	</ControlTemplate>


	<ControlTemplate x:Key="RightThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid>
			<Polygon x:Name="ThumbPolygon" VerticalAlignment="Bottom" Fill="{StaticResource NormalThumbFillBackground}" SnapsToDevicePixels="True"
				    StrokeThickness=".5" Stroke="Black" StrokeLineJoin="Round"
				    Points="0,10 10,10 5,2" Width="12" Height="10" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="ThumbPolygon" Property="Fill" Value="{StaticResource MouseOverThumbFillBackground}" />
			</Trigger>
			<Trigger Property="IsMouseCaptureWithin" Value="True">
				<Setter TargetName="ThumbPolygon" Property="Fill" Value="{StaticResource PressedThumbFillBackground}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="RightSliderTemplate" TargetType="{x:Type Slider}">
		<Track x:Name="PART_Track" Orientation="Horizontal">
			<Track.Thumb>
				<Thumb x:Name="thumb" Focusable="True"
					  Background="{TemplateBinding Background}" Template="{StaticResource RightThumbTemplate}">
				</Thumb>
			</Track.Thumb>
		</Track>
	</ControlTemplate>

	<Converters:TimeSpanToDoubleConverter x:Key="TimeSpanToDoubleConverter" />

	<Style TargetType="{x:Type UCs:TimeSlider}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type UCs:TimeSlider}">
					<Border Background="{TemplateBinding Background}"
						   BorderBrush="{TemplateBinding BorderBrush}"
						   BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="11" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="11" />
								</Grid.ColumnDefinitions>
							</Grid>

							<Slider x:Name="PART_ValueSlider" Grid.ColumnSpan="5" TickPlacement="Both" TickFrequency="10"
								   IsMoveToPointEnabled="True" Focusable="{TemplateBinding Focusable}"
								   Minimum="{TemplateBinding Minimum, Converter={StaticResource TimeSpanToDoubleConverter}}"
								   Maximum="{TemplateBinding Maximum, Converter={StaticResource TimeSpanToDoubleConverter}}"
								   IsSelectionRangeEnabled="True"
								   SelectionStart="{Binding ElementName=PART_RangeStartSlider, Path=Value, Mode=OneWay}"
								   SelectionEnd="{Binding ElementName=PART_RangeEndSlider, Path=Value, Mode=OneWay}" />

							<!-- Margin is set in CodeBehind, based on HigherSlider's Thumb width -->
							<Slider x:Name="PART_RangeStartSlider" Grid.ColumnSpan="5" Visibility="Collapsed"
								   Minimum="{Binding ElementName=PART_ValueSlider, Path=Minimum, Mode=OneWay}"
								   Maximum="{Binding ElementName=PART_ValueSlider, Path=Maximum, Mode=OneWay}"
								   Focusable="False" Template="{StaticResource LeftSliderTemplate}" IsTabStop="False" />

							<!-- Margin is set in CodeBehind, based on LowerSlider's Thumb width -->
							<Slider x:Name="PART_RangeEndSlider" Grid.ColumnSpan="5" Visibility="Collapsed"
								   Minimum="{Binding ElementName=PART_ValueSlider, Path=Minimum, Mode=OneWay}"
								   Maximum="{Binding ElementName=PART_ValueSlider, Path=Maximum, Mode=OneWay}"
								   Focusable="False" Template="{StaticResource RightSliderTemplate}" IsTabStop="False" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsReadOnly}" Value="False" />
								<Condition Binding="{Binding DesignMode, RelativeSource={RelativeSource Self}}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter TargetName="PART_RangeStartSlider" Property="Visibility" Value="Visible" />
								<Setter TargetName="PART_RangeEndSlider" Property="Visibility" Value="Visible" />
								<Setter TargetName="PART_ValueSlider" Property="IsEnabled" Value="False" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
